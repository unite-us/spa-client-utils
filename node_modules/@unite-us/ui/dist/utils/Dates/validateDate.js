"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _lodash = _interopRequireDefault(require("lodash"));

var _momentizeValue = _interopRequireDefault(require("./momentizeValue"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function validateDate(date, maxDate, minDate, shouldDisableDate, dateFormat) {
  var customErrorMessage = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';
  var maxiDate = (0, _momentizeValue["default"])(maxDate);
  var miniDate = (0, _momentizeValue["default"])(minDate);
  var errors = [];

  if (!date) {
    return undefined;
  }

  if (maxiDate && date.isAfter(maxiDate)) {
    var errorMessage = customErrorMessage || "Date should not be after ".concat(maxiDate.format(dateFormat));
    errors = _lodash["default"].concat(errors, errorMessage);
  }

  if (miniDate && date.isSameOrBefore(miniDate)) {
    var _errorMessage = customErrorMessage || "Date should be after ".concat(miniDate.format(dateFormat));

    errors = _lodash["default"].concat(errors, _errorMessage);
  }

  if (_lodash["default"].isFunction(shouldDisableDate) && shouldDisableDate(date) || !date.isValid() || date.year() === 0) {
    errors = _lodash["default"].concat(errors, 'Invalid Date');
  }

  return _lodash["default"].join(errors, ',');
}

var _default = validateDate;
exports["default"] = _default;