"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _lodash = _interopRequireDefault(require("lodash"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _index = _interopRequireDefault(require("../index"));

var _filterChildren = _interopRequireDefault(require("../../../utils/Children/filterChildren"));

var _keyCodes = require("../../../utils/Browser/keyCodes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MenuItem = /*#__PURE__*/function (_Component) {
  _inherits(MenuItem, _Component);

  var _super = _createSuper(MenuItem);

  function MenuItem(props) {
    var _this;

    _classCallCheck(this, MenuItem);

    _this = _super.call(this, props);
    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));
    _this.closeMainMenu = _this.closeMainMenu.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(MenuItem, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var _this$props = this.props,
          position = _this$props.position,
          index = _this$props.index;

      if (position === index) {
        this.menuItemDOM.focus();
      }
    }
  }, {
    key: "onClick",
    value: function onClick() {
      var _this$props2 = this.props,
          menuItems = _this$props2.menuItems,
          subItemParent = _this$props2.subItemParent;
      this.props.onClick();
      this.menuItemDOM.blur();

      if (_lodash["default"].isEmpty(menuItems) && this.props.onClick !== _lodash["default"].noop) {
        this.closeMainMenu();
      }

      if (subItemParent) {
        this.props.closeMainMenu();
      }

      this.props.handleParentMenuonClick();
    }
  }, {
    key: "closeMainMenu",
    value: function closeMainMenu() {
      this.props.togglePopover();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props3 = this.props,
          id = _this$props3.id,
          className = _this$props3.className,
          primaryNode = _this$props3.primaryNode,
          index = _this$props3.index,
          position = _this$props3.position,
          children = _this$props3.children,
          menuItems = _this$props3.menuItems,
          subMenuPosition = _this$props3.subMenuPosition,
          subMenuTarget = _this$props3.subMenuTarget,
          _onKeyDown = _this$props3.onKeyDown,
          handleMenuItemNavigation = _this$props3.handleMenuItemNavigation,
          subItemParent = _this$props3.subItemParent,
          closeMainMenu = _this$props3.closeMainMenu,
          onClick = _this$props3.onClick,
          handleParentMenuonClick = _this$props3.handleParentMenuonClick;

      var menuItemClass = function menuItemClass() {
        return (0, _classnames["default"])({
          'ui-menu-item': true,
          'ui-menu-item--hovered': index === position,
          'ui-menu-item--disabled': onClick === _lodash["default"].noop && _lodash["default"].isEmpty(menuItems)
        }, className);
      };

      var submenuItemClass = function submenuItemClass() {
        return (0, _classnames["default"])({
          'ui-sub-menu-items': true,
          'ui-sub-menu-items--hovered': index === position
        });
      };

      var newChildren = (0, _filterChildren["default"])(children);

      if (!_lodash["default"].isEmpty(menuItems)) {
        return /*#__PURE__*/_react["default"].createElement(_index["default"], {
          className: submenuItemClass(),
          anchorElement: /*#__PURE__*/_react["default"].createElement("div", {
            id: id,
            role: "button",
            tabIndex: 0,
            className: menuItemClass(),
            onClick: handleParentMenuonClick,
            onKeyDown: function onKeyDown(e) {
              _onKeyDown(e);

              handleMenuItemNavigation(e);
            },
            onMouseEnter: function onMouseEnter() {
              return _this2.props.setPosition(index);
            },
            ref: function ref(menuItemDOM) {
              _this2.menuItemDOM = menuItemDOM;
            }
          }, primaryNode, newChildren),
          position: subMenuPosition,
          target: subMenuTarget,
          subItemParent: true,
          closeMainMenu: this.closeMainMenu
        }, _lodash["default"].map(menuItems, function (menuItem) {
          return menuItem;
        }));
      }

      return /*#__PURE__*/_react["default"].createElement("div", {
        id: id,
        role: "button",
        tabIndex: 0,
        className: menuItemClass(),
        onClick: this.onClick,
        onKeyDown: function onKeyDown(e) {
          if (e.keyCode === _keyCodes.RETURN_KEY_CODE) {
            _this2.closeMainMenu();

            if (subItemParent) {
              closeMainMenu();
            }
          }

          _onKeyDown(e);

          handleMenuItemNavigation(e);
        },
        onMouseEnter: function onMouseEnter() {
          return _this2.props.setPosition(index);
        },
        ref: function ref(menuItemDOM) {
          _this2.menuItemDOM = menuItemDOM;
        }
      }, primaryNode, children);
    }
  }]);

  return MenuItem;
}(_react.Component);

MenuItem.propTypes = {
  /** id for reference */
  id: _propTypes["default"].string,

  /** className for reference */
  className: _propTypes["default"].string,

  /** node for the menuItem */
  primaryNode: _propTypes["default"].node,

  /** Callback function when clicked */
  onClick: _propTypes["default"].func,

  /** Callback function from app-client with route when enter key is pressed down */
  onKeyDown: _propTypes["default"].func,

  /** Callback function handling the keydown from the Menu parent handling arrow, tab and return navigation */
  handleMenuItemNavigation: _propTypes["default"].func,

  /** Handles onClick from the Parent Menu Component */
  handleParentMenuonClick: _propTypes["default"].func,

  /** array of MenuItems that will act as subItems */
  menuItems: _propTypes["default"].array,

  /** position of the submenu list (if exist), will default to left-start */
  subMenuPosition: _propTypes["default"].oneOf(['right-start', 'right-end', 'left-start', 'left-end', 'bottom-start', 'bottom-end', 'top-start', 'top-end']),
  subMenuTarget: _propTypes["default"].oneOf(['top-bottom', 'bottom-top', 'right-left', 'left-right']),

  /**
   * If true, MenuItem will act as parent of Menu
   * @ignore
   */
  subItemParent: _propTypes["default"].bool,

  /**
   * Prop function received from Menu to set the position
   * @ignore
   */
  setPosition: _propTypes["default"].func,

  /**
   * Prop position to compare index to current position
   * @ignore
   */
  position: _propTypes["default"].number,

  /**
   * Prop function received from Menu to toggle popover (MainMenu)
   * @ignore
   */
  togglePopover: _propTypes["default"].func,

  /**
   *    * Prop function receieved from Menu to close both Main and subMenu
   * @ignore
   */
  closeMainMenu: _propTypes["default"].func,

  /**
   * index position props inside the Menu
   * @ignore
   */
  index: _propTypes["default"].number,

  /**
   * children props for content inside
   * @ignore
   */
  children: _propTypes["default"].node.isRequired
};
MenuItem.defaultProps = {
  id: '',
  className: '',
  position: 0,
  index: null,
  setPosition: _lodash["default"].noop,
  children: [],
  menuItems: [],
  primaryNode: [],
  onClick: _lodash["default"].noop,
  onKeyDown: _lodash["default"].noop,
  handleMenuItemNavigation: _lodash["default"].noop,
  handleParentMenuonClick: _lodash["default"].noop,
  subItemParent: false,
  subMenuPosition: 'left-start',
  subMenuTarget: 'top-bottom',
  closeMainMenu: _lodash["default"].noop,
  togglePopover: _lodash["default"].noop
};
var _default = MenuItem;
exports["default"] = _default;