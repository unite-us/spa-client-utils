"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _lodash = _interopRequireDefault(require("lodash"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _filterChildren = _interopRequireDefault(require("../../../utils/Children/filterChildren"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var TableRow = /*#__PURE__*/function (_Component) {
  _inherits(TableRow, _Component);

  var _super = _createSuper(TableRow);

  function TableRow(props) {
    var _this;

    _classCallCheck(this, TableRow);

    _this = _super.call(this, props);
    _this.onCellClick = _this.onCellClick.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(TableRow, [{
    key: "onCellClick",
    value: function onCellClick(columnIndex, event) {
      var parent = this.props.parent;

      if (parent === 'table-body' && _lodash["default"].isFunction(this.props.onCellClick)) {
        this.props.onCellClick(this.props.rowIndex, columnIndex, event);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          className = _this$props.className,
          id = _this$props.id,
          clickable = _this$props.clickable,
          children = _this$props.children,
          secondaryDataList = _this$props.secondaryDataList,
          style = _this$props.style,
          hoverable = _this$props.hoverable;

      var tableRowClass = function tableRowClass() {
        return (0, _classnames["default"])({
          'ui-table-row': true,
          'ui-table-row--clickable': clickable,
          'ui-table-row--hoverable': hoverable
        }, className);
      };

      var filteredChildren = (0, _filterChildren["default"])(children);

      var childrenWithFuncs = _react["default"].Children.map(filteredChildren, function (child, index) {
        return /*#__PURE__*/_react["default"].cloneElement(child, {
          onCellClick: _this2.onCellClick,
          columnIndex: index,
          secondaryDataList: secondaryDataList
        });
      });

      return /*#__PURE__*/_react["default"].createElement("tr", {
        id: id,
        className: tableRowClass(),
        onClick: this.onCellClick,
        style: style
      }, childrenWithFuncs);
    }
  }]);

  return TableRow;
}(_react.Component);

TableRow.propTypes = {
  /** id for reference */
  id: _propTypes["default"].string,

  /** className for reference */
  className: _propTypes["default"].string,

  /** If true, row will be clickable */
  clickable: _propTypes["default"].bool,

  /** If true, row will be hoverable */
  hoverable: _propTypes["default"].bool,

  /** Override the inline-styles of the root element || Not Recommended */
  style: _propTypes["default"].object,

  /**
   * children props for content inside
   * @ignore
   */
  children: _propTypes["default"].node,

  /**
   * on cell click passed from the TableBody component
   * @ignore
   */
  onCellClick: _propTypes["default"].func,

  /**
   * Row index passed from TableBody component
   * @ignore
   */
  rowIndex: _propTypes["default"].number.isRequired,

  /**
   * Root parent component
   * @ignore
   */
  parent: _propTypes["default"].string,

  /**
   * Data (in columns) to hide passed from TableHead or TableBody component
   * @ignore
   */
  secondaryDataList: _propTypes["default"].array
};
TableRow.defaultProps = {
  id: '',
  className: '',
  children: [],
  clickable: true,
  hoverable: true,
  onCellClick: null,
  rowIndex: 0,
  parent: '',
  secondaryDataList: [],
  style: {}
};
var _default = TableRow;
exports["default"] = _default;