import React from 'react';
import { mount, shallow } from 'enzyme';
import Pager from '../../src/components/Display/Pager';

describe('Pager Component', () => {
  const defaultProps = {
    onNextClick: jest.fn(),
    onPrevClick: jest.fn(),
    paging: {
      current_page: 1,
      next_page: 2,
      prev_page: null,
      per: 5,
      total_count: 32,
      total_pages: 7,
    },
  };

  describe('Default Pager', () => {
    const pager = shallow(<Pager {...defaultProps} />);

    it('renders the Pager component', () => {
      expect(pager.find('.ui-pager')).toHaveLength(1);
      expect(pager.find('.ui-pager__btn-next')).toHaveLength(1);
      expect(pager.find('.ui-pager__btn-prev')).toHaveLength(1);
    });
  });

  describe('disables both buttons when disabled is true', () => {
    const props = {
      ...defaultProps,
      disabled: true,
    };

    const pager = shallow(<Pager {...props} />);

    it('should be disabled', () => {
      expect(pager.find('.ui-pager__btn--disabled')).toHaveLength(2);
    });

    it('should not call onPrevClick', () => {
      const onPrevClick = jest.fn();

      pager.find('.ui-pager__btn-prev').simulate('click');
      expect(onPrevClick).not.toHaveBeenCalled();
    });

    it('should not call onNextClick', () => {
      const onNextClick = jest.fn();

      pager.find('.ui-pager__btn-prev').simulate('click');
      expect(onNextClick).not.toHaveBeenCalled();
    });
  });

  describe('Page Count', () => {
    it('renders the Count component', () => {
      const pager = mount(<Pager {...defaultProps} />);
      expect(pager.find('Count')).toHaveLength(1);
    });

    it('displays page range based on "per" prop', () => {
      const pager = mount(<Pager {...defaultProps} />);
      const component = pager.find('Count');
      expect(component.text()).toBe('1-5 of 32');
    });

    it('displays total count', () => {
      const props = {
        ...defaultProps,
        paging: {
          ...defaultProps.paging,
          total_count: 40,
        },
      };

      const pager = mount(<Pager {...props} />);
      const component = pager.find('Count');
      expect(component.text()).toBe('1-5 of 40');
    });

    it('does not render the Count component if hideCount is true', () => {
      const props = {
        ...defaultProps,
        hideCount: true,
      };

      const pager = mount(<Pager {...props} />);
      expect(pager.find('Count')).toHaveLength(0);
    });
  });

  describe('Previous Button', () => {
    it('should not call onPrevClick when paging.prev_page is null', () => {
      const onPrevClick = jest.fn();
      const props = {
        ...defaultProps,
        onPrevClick,
        paging: {
          ...defaultProps.paging,
          prev_page: null,
        },
      };

      const pager = mount(<Pager {...props} />);

      pager.find('.ui-pager__btn-prev').simulate('click');
      expect(onPrevClick).not.toHaveBeenCalled();
    });

    it('should call onPrevClick when paging.next_page has value', () => {
      const onPrevClick = jest.fn();
      const props = {
        ...defaultProps,
        onPrevClick,
        paging: {
          ...defaultProps.paging,
          prev_page: 1,
        },
      };

      const pager = mount(<Pager {...props} />);

      pager.find('.ui-pager__btn-prev').simulate('click');
      expect(onPrevClick).toHaveBeenCalled();
    });
  });

  describe('Next Button', () => {
    it('should not call onNextClick when paging.next_page is null', () => {
      const onNextClick = jest.fn();
      const props = {
        ...defaultProps,
        onNextClick,
        paging: {
          ...defaultProps.paging,
          next_page: null,
        },
      };

      const pager = mount(<Pager {...props} />);

      pager.find('.ui-pager__btn-next').simulate('click');
      expect(props.onNextClick).not.toHaveBeenCalled();
    });

    it('should call onNextClick when paging.next_page has value', () => {
      const onNextClick = jest.fn();
      const props = {
        ...defaultProps,
        onNextClick,
        paging: {
          ...defaultProps.paging,
          next_page: 1,
        },
      };

      const pager = mount(<Pager {...props} />);

      pager.find('.ui-pager__btn-next').simulate('click');
      expect(onNextClick).toHaveBeenCalled();
    });
  });
});
