import React from 'react';
import { shallow } from 'enzyme';
import CardText from 'components/Display/Card/components/CardText';

describe('CardText', () => {
  describe('Controlled State', () => {
    let props;
    let component;

    beforeAll(() => {
      props = {
        id: 'id-1234',
        className: 'className-1234',
        controlled: true,
        expandable: true,
        expanded: true,
        children: <div>Hello World</div>,
      };

      component = shallow(<CardText {...props} />);
    });

    it('renders the CardText component', () => {
      expect(component.find('.ui-card-text')).toHaveLength(1);
    });

    it('should be expanded', () => {
      expect(component.find('.ui-card-text--expanded')).toHaveLength(1);
      expect(component.find('.ui-card-text--expanded').text()).toBe('Hello World');
    });

    it('should be hidden', () => {
      const newProps = { ...props, expanded: false };
      component = shallow(<CardText {...newProps} />);
      expect(component.find('.ui-card-text--hidden')).toHaveLength(1);
    });
  });

  describe('Uncontrolled State', () => {
    let props;
    let component;

    beforeAll(() => {
      props = {
        id: 'id-1234',
        className: 'className-1234',
        controlled: false,
        expandable: true,
        expanded: true,
        children: <div>Hello World</div>,
      };

      component = shallow(<CardText {...props} />);
    });

    it('renders the CardText component', () => {
      expect(component.find('.ui-card-text')).toHaveLength(1);
    });

    it('should be expanded', () => {
      expect(component.find('.ui-card-text--expanded')).toHaveLength(1);
      expect(component.find('.ui-card-text--expanded').text()).toBe('Hello World');
    });

    it('should be hidden', () => {
      const newProps = { ...props, expanded: false };
      component = shallow(<CardText {...newProps} />);
      expect(component.find('.ui-card-text--hidden')).toHaveLength(1);
    });
  });
});
