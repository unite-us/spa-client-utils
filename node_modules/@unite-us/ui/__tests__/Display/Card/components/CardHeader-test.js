import React from 'react';
import { shallow } from 'enzyme';
import CardHeader from 'components/Display/Card/components/CardHeader';

describe('CardHeader', () => {
  describe('Controlled State', () => {
    const props = {
      id: 'id-1234',
      className: 'className-1234',
      title: 'CardHeader Text',
      showExpandableButton: true,
      onExpandChange: jest.fn(),
      expandable: true,
      controlled: true,
    };

    it('renders the HeaderComponent', () => {
      const component = shallow(<CardHeader {...props} />);

      expect(component.find('.ui-card-header')).toHaveLength(1);
    });

    it('shows the expandable button', () => {
      const component = shallow(<CardHeader {...props} />);

      expect(component.find('.ui-card-header__expandable')).toHaveLength(1);
    });

    it('renders the proper title', () => {
      const component = shallow(<CardHeader {...props} />);

      expect(component.find('.ui-card-header__title').text()).toBe('CardHeader Text');
    });

    it('calls onExpandChange', () => {
      const component = shallow(<CardHeader {...props} />);

      component.find('Icon').simulate('click');
      expect(props.onExpandChange).toBeCalled();
    });

    describe('icon tooltip', () => {
      const newProps = {
        ...props,
        showHeaderIcon: true,
        headerIconDetails: {
          color: 'gold',
          icon: 'DogeCoin',
          size: 5,
          toolTipText: 'This is a test',
        },
        showExpandableButton: false,
      };


      it('renders an icon if showHeaderIcon is true', () => {
        const newComponent = shallow(<CardHeader {...newProps} />);

        expect(newComponent.find('Icon')).toHaveLength(1);
        expect(newComponent.find('.icon-tooltip')).toHaveLength(1);
      });

      it('renders a tooltip if toolTipText exists', () => {
        const newComponent = shallow(<CardHeader {...newProps} />);

        expect(newComponent.find('.tooltip')).toHaveLength(1);
      });
    });
  });

  describe('Uncontrolled State', () => {
    let props;
    let component;
    let onExpandChangeSpy;

    beforeAll(() => {
      onExpandChangeSpy = jest.fn();

      props = {
        id: 'id-1234',
        className: 'className-1234',
        title: 'CardHeader Text',
        showExpandableButton: true,
        onExpandChange: onExpandChangeSpy,
        expandable: true,
        expanded: true,
      };

      component = shallow(<CardHeader {...props} />);
    });

    it('calls onExpandChange', () => {
      component.find('Icon').simulate('click');
      expect(onExpandChangeSpy).toBeCalled();
    });
  });
});
