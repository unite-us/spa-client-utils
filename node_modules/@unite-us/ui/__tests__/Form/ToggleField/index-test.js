import React from 'react';
import ToggleField from 'components/Form/ToggleField';
import { shallow } from 'enzyme';

describe('ToggleField', () => {
  it('renders', () => {
    const props = {
      id: 'test-1',
      label: 'Test 1',
    };
    const result = shallow(<ToggleField {...props} />);
    expect(result.find('input#test-1')).toHaveLength(1);
  });

  it('renders redux-form 5 field', () => {
    const onChange = jest.fn();
    const onBlur = jest.fn();
    const props = {
      id: 'test-2',
      label: 'Test 2',
      field: {
        name: 'input-field',
        checked: true,
        onChange,
        onBlur,
      },
    };
    const result = shallow(<ToggleField {...props} />);
    const input = result.find('input');
    input.simulate('change', false);
    expect(result.find('input#test-2')).toHaveLength(1);
    expect(onChange).toHaveBeenCalledWith(false);
  });

  it('renders redux-form 7 field', () => {
    const onChange = jest.fn();
    const onBlur = jest.fn();
    const props = {
      id: 'test-3',
      label: 'Test 3',
      input: {
        name: 'input-field',
        checked: true,
        onChange,
        onBlur,
      },
      meta: {
        error: undefined,
        invalid: false,
        valid: true,
        touched: true,
      },
    };
    const result = shallow(<ToggleField {...props} />);
    expect(result.find('input#test-3')).toHaveLength(1);
  });
});
