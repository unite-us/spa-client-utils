import { getPreferredProp } from 'components/Form/utils';

describe('getPreferredProp', () => {
  it('gets a prop from the manual props', () => {
    const props = {
      value: 'hello',
    };
    const result = getPreferredProp(props, 'value');
    expect(result).toBe('hello');
  });

  it('gets a prop from the redux-form 5 field props', () => {
    const props = {
      value: 'hello',
      field: { value: 'hello5' },
    };
    const result = getPreferredProp(props, 'value');
    expect(result).toBe('hello5');
  });

  it('gets a prop from the redux-form 7 field props', () => {
    const props = {
      value: 'hello',
      error: 'my error',
      field: { value: 'hello5' },
      input: { value: 'hello7' },
      meta: { error: 'redux-form 7 error' },
    };
    const result = getPreferredProp(props, 'value');
    expect(result).toBe('hello7');
    const result2 = getPreferredProp(props, 'error');
    expect(result2).toBe('redux-form 7 error');
  });

  it('returns undefined for a non existing prop', () => {
    const result = getPreferredProp(null, 'iDontExist');
    expect(result).toBeUndefined();
  });
});
