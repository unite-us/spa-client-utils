import React from 'react';
import RadioField from 'components/Form/RadioField';
import { shallow } from 'enzyme';

describe('RadioField', () => {
  describe('redux-form 5 field', () => {
    let props;
    let component;
    let onChangeSpy;
    let onBlurSpy;

    const postLabelContent = (
      <div className="post-label">I m post label content</div>
    );

    beforeAll(() => {
      onChangeSpy = jest.fn();
      onBlurSpy = jest.fn();

      props = {
        id: 'id-123',
        className: 'class-123',
        value: 'data_3',
        postLabelContent,
        options: [
          {
            label: 'Data 3',
            value: 'data_3',
          },
          {
            label: 'Data 4',
            value: 'data_4',
          },
          {
            label: 'Data 5',
            value: 'data_5',
          },
          {
            label: 'Data 10',
            value: 'data_10',
          },
        ],
        field: {
          name: 'radio-field',
          onChange: onChangeSpy,
          onBlur: onBlurSpy,
        },
      };

      component = shallow(<RadioField {...props} />);
    });

    it('renders', () => {
      expect(component.find('.ui-radio-field')).toHaveLength(1);
    });

    it('renders redux-form 5 field and calls onChangeSpy', () => {
      const input = component.find('#id-123-1');
      input.simulate('change', true);
      expect(onChangeSpy).toHaveBeenCalled();
    });

    it('accepts and renders the postLabelContent', () => {
      expect(component.find('.post-label')).toHaveLength(1);
    });
  });

  describe('redux-form 7 field', () => {
    let props;
    let component;
    let onChangeSpy;
    let onBlurSpy;

    beforeAll(() => {
      onChangeSpy = jest.fn();
      onBlurSpy = jest.fn();

      props = {
        id: 'id-123',
        className: 'class-123',
        value: 'data_3',
        options: [
          {
            label: 'Data 3',
            value: 'data_3',
          },
          {
            label: 'Data 4',
            value: 'data_4',
          },
          {
            label: 'Data 5',
            value: 'data_5',
          },
          {
            label: 'Data 10',
            value: 'data_10',
          },
        ],
        input: {
          name: 'radio-field',
          checked: true,
          onChange: onChangeSpy,
          onBlur: onBlurSpy,
        },
        meta: {
          error: undefined,
          invalid: false,
          valid: true,
          touched: true,
        },
      };

      component = shallow(<RadioField {...props} />);
    });

    it('calls onChangeSpy', () => {
      const input = component.find('#id-123-1');
      input.simulate('change', true);
      expect(onChangeSpy).toHaveBeenCalled();
    });
  });
});
