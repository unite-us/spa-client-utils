import React from 'react';
import TextField from 'components/Form/TextField';
import { shallow } from 'enzyme';

describe('TextField', () => {
  it('renders', () => {
    const props = {
      id: 'test-1',
      label: 'Test 1',
    };

    const component = shallow(<TextField {...props} />);
    expect(component.find('textarea#test-1')).toHaveLength(1);
  });

  it('renders redux-form 5 field', () => {
    const onChange = jest.fn();
    const onBlur = jest.fn();

    const props = {
      id: 'test-2',
      label: 'Test 2',
      field: {
        name: 'text-field',
        value: 'Hello World',
        onChange,
        onBlur,
      },
    };

    const component = shallow(<TextField {...props} />);
    const textarea = component.find('textarea');
    textarea.simulate('change', 'Changed');
    expect(component.find('textarea#test-2')).toHaveLength(1);
    expect(onChange).toHaveBeenCalledWith('Changed');
  });

  it('renders redux-form 7 field', () => {
    const onChange = jest.fn();
    const onBlur = jest.fn();
    const props = {
      id: 'test-3',
      label: 'Test 3',
      input: {
        name: 'text-field',
        value: 'hello',
        onChange,
        onBlur,
      },
      meta: {
        error: 'Required',
        invalid: true,
        valid: false,
        touched: true,
      },
    };

    const component = shallow(<TextField {...props} />);
    const error = component.find('.ui-form-field__error');

    expect(component.find('textarea#test-3')).toHaveLength(1);
    expect(error.text()).toBe('Required');
    expect(component.find('.ui-text-field--has-error')).toHaveLength(1);
  });
});
