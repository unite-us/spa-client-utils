import React from 'react';
import CheckBoxField from 'components/Form/CheckBoxField';
import { shallow } from 'enzyme';

describe('CheckBoxField', () => {
  it('renders', () => {
    const props = {
      id: 'test-1',
      label: 'Test 1',
    };
    const result = shallow(<CheckBoxField {...props} />);
    expect(result.find('input#test-1')).toHaveLength(1);
  });

  it('renders redux-form 5 field', () => {
    const onChange = jest.fn();
    const onChange2 = jest.fn();
    const onBlur = jest.fn();
    const props = {
      id: 'test-2',
      label: 'Test 2',
      onChange: onChange2,
      field: {
        name: 'input-field',
        checked: true,
        onChange,
        onBlur,
      },
    };
    const event = { target: { checked: false } };
    const result = shallow(<CheckBoxField {...props} />);
    const input = result.find('input');
    input.simulate('change', event);
    expect(result.find('input#test-2')).toHaveLength(1);
    expect(onChange).toHaveBeenCalledWith(event);
    expect(onChange2).toHaveBeenCalledWith(false);
  });

  it('renders redux-form 7 field', () => {
    const onChange = jest.fn();
    const onBlur = jest.fn();
    const props = {
      id: 'test-3',
      label: 'Test 3',
      input: {
        name: 'input-field',
        checked: true,
        onChange,
        onBlur,
      },
      meta: {
        error: undefined,
        invalid: false,
        valid: true,
        touched: true,
      },
    };
    const result = shallow(<CheckBoxField {...props} />);
    expect(result.find('input#test-3')).toHaveLength(1);
  });

  it('adds a sr-only class to label if hideLabel prop is passed in', () => {
    const props = {
      id: 'test-1',
      label: 'Test 1',
      hideLabel: true,
    };

    const result = shallow(<CheckBoxField {...props} />);
    expect(result.find('label.sr-only')).toHaveLength(1);
  });
});
