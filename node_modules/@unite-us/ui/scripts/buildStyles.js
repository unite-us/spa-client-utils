/* eslint-disable no-console */
const sass = require('sass');
const postcss = require('postcss');
const autoprefixer = require('autoprefixer');
const fs = require('fs-extra');
const chalk = require('chalk');
const tildeImporter = require('node-sass-tilde-importer');

const packageName = 'uniteus-ui';
console.log(chalk.blue(`Building the stylesheet for ${packageName}`));

sass.render({
  file: './src/stylesheets/main.scss',
  outFile: './dist/main.css',
  sourceMap: true,
  outputStyle: 'expanded',
  importer: tildeImporter,
}, (err, result) => {
  if (err) {
    console.log(chalk.red(`Something went wrong rendering styles for ${packageName}.`));
    console.log(err);
  } else {
    console.log(result.stats);

    const prefixer = autoprefixer({
      browsers: [
        '>1%',
        'last 4 versions',
        'Firefox ESR',
        'not ie < 9', // React doesn't support IE8 anyway
      ],
      flexbox: 'no-2009',
    });

    const cssDest = './dist/main.css';

    postcss([prefixer])
      .process(result.css, {
        from: undefined,
        to: cssDest,
        map: { inline: false },
      })
      .then((postCssResult) => {
        const promises = [fs.outputFile(cssDest, postCssResult.css)];
        if (result.map) {
          promises.push(fs.outputFile('./dist/main.css.map', postCssResult.map.toString()));
        }
        return Promise.all(promises);
      })
      .then(() => console.log(chalk.green('Success')))
      .catch((error) => {
        console.log(chalk.red(`Something went wrong processing css for ${packageName}.`));
        console.error(error);
      });
  }
});
